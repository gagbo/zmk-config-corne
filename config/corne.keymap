/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

//
// HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)
// after typing before you can use home row mods again.  It prevents
// unintended activation of home row mods when you're actively typing.
//
#define HOMEY_STREAK_DECAY 130

//
// HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.
//
#define HOMEY_REPEAT_DECAY 200

//
// SHIFT_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.
//
#define SHIFT_REPEAT_DECAY 200 // "tap then hold" for key auto-repeat

//
// THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)
// a thumb key to activate a layer.  Shorter holds are treated as taps.
//
#define THUMB_HOLDING_TIME 180

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

        #include "sunaku_hrm.dtsi"
        keymap {
                compatible = "zmk,keymap";

                default_layer_macos {
                        bindings = <
   &kp TAB   &kp Q         &kp W        &kp E        &kp R         &kp T          &kp Y &kp U            &kp I         &kp O          &kp P            &kp BSPC
   &kp ESC   &hmrl LCTRL A &hmrl LALT S &hmrl LGUI D &kp F         &kp G          &kp H &kp J            &hmrr RGUI K  &hmrr LALT L   &hmrr RCTRL SEMI &kp RET
   &kp LSHFT &kp Z         &kp X        &kp C        &kp V         &kp B          &kp N &kp M            &kp COMMA     &kp DOT        &kp FSLH         &kp RSHFT
                                               &kp LALT  &kp BSPC  &mo 1          &mo 2 &kp SPACE &kp RALT
                        >;
                };
                lower_layer_macos {
                        bindings = <
   &trans &trans    &trans   &trans    &trans    &kp CAPS     &kp HOME &kp PG_DN  &kp PG_UP &kp END    &kp C_VOL_UP &kp PSCRN
   &trans &kp LCTRL &kp LALT &kp LGUI  &kp LSHFT &caps_word   &kp LEFT &kp DOWN   &kp UP    &kp RIGHT  &kp C_VOL_DN &kp INS
   &trans &trans    &kp RALT &trans    &trans    &trans       &kp DEL  &kp C_PREV &kp C_PP  &kp C_NEXT &kp C_MUTE   &trans
                        &trans     &trans       &trans       &mo 3  &trans   &trans
                        >;
                };
                raise_layer_macos {
                        bindings = <
   &trans &kp LBKT  &kp N7 &kp N8 &kp N9   &kp RBKT   &kp STAR &kp PLUS  &kp MINUS &kp FSLH &trans    &trans
   &trans &kp N0    &kp N4 &kp N5 &kp N6   &kp EQUAL  &none    &kp RSHFT &kp RGUI  &kp LALT &kp RCTRL &trans
   &trans &none     &kp N1 &kp N2 &kp N3   &kp BSLH   &none    &kp LPAR  &kp RPAR  &kp RALT &trans    &trans
                             &trans &trans &mo 3      &trans  &trans    &trans
                        >;
                };
                function_layer_macos {
                        bindings = <
   &trans &kp F12 &kp F7 &kp F8 &kp F9 &trans   &to 4      &none        &none        &none        &none        &none
   &trans &kp F11 &kp F4 &kp F5 &kp F6 &trans   &trans     &kp RSHFT    &kp RGUI     &kp LALT     &kp RCTRL    &none
   &trans &kp F10 &kp F1 &kp F2 &kp F3 &trans   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                        &trans &trans  &trans   &trans   &trans    &trans
                        >;
                };

                default_layer {
                        bindings = <
   &kp TAB   &kp Q        &kp W        &kp E         &kp R         &kp T          &kp Y &kp U            &kp I          &kp O          &kp P           &kp BSPC
   &kp ESC   &hmrl LGUI A &hmrl LALT S &hmrl LCTRL D &kp F         &kp G          &kp H &kp J            &hmrr RCTRL K  &hmrr LALT L   &hmrr RGUI SEMI &kp RET
   &kp LSHFT &kp Z        &kp X        &kp C         &kp V         &kp B          &kp N &kp M            &kp COMMA      &kp DOT        &kp FSLH        &kp RSHFT
                                               &kp LALT  &kp BSPC  &mo 5          &mo 6 &kp SPACE &kp RALT
                        >;
                };
                lower_layer {
                        bindings = <
   &trans &trans   &trans   &trans    &trans    &kp CAPS     &kp HOME &kp PG_DN  &kp PG_UP &kp END    &kp C_VOL_UP &kp PSCRN
   &trans &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &caps_word   &kp LEFT &kp DOWN   &kp UP    &kp RIGHT  &kp C_VOL_DN &kp INS
   &trans &trans   &kp RALT &trans    &trans    &trans       &kp DEL  &kp C_PREV &kp C_PP  &kp C_NEXT &kp C_MUTE   &trans
                        &trans     &trans       &trans       &mo 7  &trans   &trans
                        >;
                };
                raise_layer {
                        bindings = <
   &trans &kp LBKT  &kp N7 &kp N8 &kp N9   &kp RBKT   &kp STAR &kp PLUS  &kp MINUS &kp FSLH &trans &trans
   &trans &kp N0    &kp N4 &kp N5 &kp N6   &kp EQUAL  &none    &kp RSHFT &kp RCTRL &kp LALT &kp RGUI &trans
   &trans &none     &kp N1 &kp N2 &kp N3   &kp BSLH   &none    &kp LPAR  &kp RPAR  &kp RALT &trans &trans
                             &trans &trans &mo 7      &trans  &trans    &trans
                        >;
                };
                function_layer {
                        bindings = <
   &trans &kp F12 &kp F7 &kp F8 &kp F9 &trans   &to 0      &none        &none        &none        &none        &none
   &trans &kp F11 &kp F4 &kp F5 &kp F6 &trans   &trans     &kp RSHFT    &kp RCTRL    &kp LALT     &kp RGUI     &none
   &trans &kp F10 &kp F1 &kp F2 &kp F3 &trans   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                        &trans &trans  &trans   &trans   &trans    &trans
                        >;
                };

        };
};
